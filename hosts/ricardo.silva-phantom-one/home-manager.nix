{ config, pkgs, lib, home-manager, dotfiles, user, ... }:
{
  users.users.${user} = {
    name = "${user}";
    home = "/Users/${user}";
    isHidden = false;
    shell = pkgs.zsh;
  };

  environment.systemPackages = import ../../modules/darwin/system-packages.nix { pkgs = pkgs; };

  home-manager = {
    useGlobalPkgs = true;
    users.${user} = { pkgs, config, lib, ... }:{
      home = {
        enableNixpkgsReleaseCheck = false;
        packages = pkgs.callPackage ./home-packages.nix {};
        stateVersion = "25.05";
      };

      xdg.enable = true;

      xdg.configFile."yabai/yabairc" = {
        source = "${dotfiles}/yabai/yabairc";
        executable = true;
      };

      xdg.configFile."skhd/skhdrc" = {
        source = "${dotfiles}/skhd/skhdrc";
        executable = true;
      };

      programs = {
    zsh = {
      enable = true;
      autosuggestion.enable = true;
      enableCompletion = true;
      syntaxHighlighting.enable = true;

      history = {
        size = 10000;
        save = 10000;
        ignoreDups = true;
        extended = true;
      };

      shellAliases = {
        cat = "bat -p";
        grep = "rg";
        ll = "eza -lah --icons";
        ls = "eza --group-directories-first";
        nix-apply = "sudo nix run nix-darwin -- switch --flake ~/.nix-config/.#${pkgs.system}";
        nix-rebuild = "sudo darwin-rebuild switch --flake ~/.nix-config/.#${pkgs.system}";
        tree = "eza --tree";
      };

      initContent = ''
        # set less annoying keybindings for fzf
        export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow --exclude .git'
        export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
        export FZF_DEFAULT_OPTS='--height 40% --border'

        # zoxide   
        eval "$(zoxide init zsh)"

        # starship prompt
        eval "$(starship init zsh)"


        # Generated by Hermit; START; DO NOT EDIT.
        HERMIT_ROOT_BIN="''${HERMIT_ROOT_BIN:-"$HOME/bin/hermit"}"
        eval "$(test -x $HERMIT_ROOT_BIN && $HERMIT_ROOT_BIN shell-hooks --print --zsh)"
        # Generated by Hermit; END; DO NOT EDIT.
      '';

      oh-my-zsh = {
        enable = true;
        plugins = [
          "colored-man-pages"
          "command-not-found"
          "git"
          "history"
          "fzf"
        ];
        theme = ""; # controlled by starship
      };
    };
  };


        git = {
          enable = true;
          userName = "Ricardo Silva";
          userEmail = "ricardo.silva@freiheit.com";
          lfs = {
            enable = true;
          };

          delta = {
            enable = true;
            options = {
              syntax-theme = "GitHub";
              line-numbers = true;
              navigate = true;
            };
          };

          extraConfig = {
            init.defaultBranch = "main";
            core = {
              editor = "vim";
              autocrlf = "input";
            };
            pull.rebase = true;
            rebase.autoStash = true;
          };
        };
      };
    };
  };

  local.dock = {
    enable = true;
    username = user;
    entries = [
      { path = "/Applications/Launchpad.app"; }
      { path = "/Applications/1Password.app"; }
      { path = "/Applications/Google Chrome.app"; }
      { path = "${pkgs.firefox}/Applications/Firefox.app"; }
      { path = "${config.users.users.${user}.home}/Applications/Chrome Apps.localized/Google Chat.app"; }
      { path = "/Applications/Microsoft Teams.app"; }
      { path = "/Applications/WhatsApp.app"; }
      { path = "/Applications/ChatGPT.app"; }
      { path = "/Applications/Xcode.app/Contents/Developer/Applications/Simulator.app"; }
      { path = "${pkgs.vscode}/Applications/Visual Studio Code.app"; }
      { path = "/Applications/Utilities/Terminal.app"; }
      { path = "/Applications/Postman.app"; }
      { path = "${pkgs.obsidian}/Applications/Obsidian.app"; }
      {
        path = "${config.users.users.${user}.home}/Google Drive/My Drive";
        section = "others";
        options = "--sort name --view grid --display stack";
      }
      {
        path = "${config.users.users.${user}.home}/Downloads";
        section = "others";
        options = "--sort name --view grid --display stack";
      }
    ];
  };

  services.yabai.enable = true;
  services.skhd.enable = true;
}
